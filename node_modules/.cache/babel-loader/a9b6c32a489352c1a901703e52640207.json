{"ast":null,"code":"import * as d3 from 'd3';\nconst MARGIN = {\n  TOP: 10,\n  BOTTOM: 80,\n  LEFT: 70,\n  RIGHT: 10\n};\nconst WIDTH = 500 - MARGIN.LEFT - MARGIN.RIGHT;\nconst HEIGHT = 300 - MARGIN.TOP - MARGIN.BOTTOM;\n\nclass D3Chart {\n  constructor(element, data) {\n    let vis = this;\n    vis.data = data;\n    vis.g = d3.select(element).append(\"svg\").attr(\"width\", WIDTH + MARGIN.LEFT + MARGIN.RIGHT).attr(\"height\", HEIGHT + MARGIN.TOP + MARGIN.BOTTOM).append(\"g\").attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`); // need to clean up data. Month needs to be a date and values needs to be numbers\n\n    vis.data.forEach(d => {\n      d.Month = d.Month.toLocaleDateString('en-GB').split('/').reverse().join('');\n    });\n    console.log(vis.data); // vis.x = d3.scaleLinear()\n    // \t.domain([0 , d3.max(vis.data, d => Number(d.age))])\n    // \t.range([0, WIDTH])\n    //\n    // vis.y = d3.scaleLinear()\n    // \t.domain([0, d3.max(vis.data, d => Number(d.height))])\n    // \t.range([HEIGHT, 0 ])\n    //\n    // console.log(vis.x(6))\n\n    vis.update();\n  }\n\n  update() {\n    let vis = this;\n  }\n\n}\n\nexport default D3Chart;","map":{"version":3,"sources":["/Users/andyalexander/Documents/d3/React/reactfordataviz/src/D3Chart.js"],"names":["d3","MARGIN","TOP","BOTTOM","LEFT","RIGHT","WIDTH","HEIGHT","D3Chart","constructor","element","data","vis","g","select","append","attr","forEach","d","Month","toLocaleDateString","split","reverse","join","console","log","update"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AAEA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,GAAG,EAAE,EAAP;AAAWC,EAAAA,MAAM,EAAE,EAAnB;AAAuBC,EAAAA,IAAI,EAAE,EAA7B;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAAf;AACA,MAAMC,KAAK,GAAG,MAAML,MAAM,CAACG,IAAb,GAAoBH,MAAM,CAACI,KAAzC;AACA,MAAME,MAAM,GAAG,MAAMN,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACE,MAAzC;;AAEA,MAAMK,OAAN,CAAc;AACbC,EAAAA,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgB;AAC1B,QAAIC,GAAG,GAAG,IAAV;AAEEA,IAAAA,GAAG,CAACD,IAAJ,GAAWA,IAAX;AAEFC,IAAAA,GAAG,CAACC,CAAJ,GAAQb,EAAE,CAACc,MAAH,CAAUJ,OAAV,EACNK,MADM,CACC,KADD,EAELC,IAFK,CAEA,OAFA,EAESV,KAAK,GAAGL,MAAM,CAACG,IAAf,GAAsBH,MAAM,CAACI,KAFtC,EAGLW,IAHK,CAGA,QAHA,EAGUT,MAAM,GAAGN,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACE,MAHvC,EAINY,MAJM,CAIC,GAJD,EAKLC,IALK,CAKA,WALA,EAKc,aAAYf,MAAM,CAACG,IAAK,KAAIH,MAAM,CAACC,GAAI,GALrD,CAAR,CAL0B,CAcxB;;AAGFU,IAAAA,GAAG,CAACD,IAAJ,CAASM,OAAT,CAAiBC,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,KAAF,GAAUD,CAAC,CAACC,KAAF,CAAQC,kBAAR,CAA2B,OAA3B,EAAoCC,KAApC,CAA0C,GAA1C,EAA+CC,OAA/C,GAAyDC,IAAzD,CAA8D,EAA9D,CAAV;AACD,KAFF;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,GAAG,CAACD,IAAhB,EArB0B,CAuB1B;AACA;AACA;AACE;AACD;AACD;AACA;AACE;AACF;;AACAC,IAAAA,GAAG,CAACc,MAAJ;AACA;;AAEDA,EAAAA,MAAM,GAAG;AACR,QAAId,GAAG,GAAG,IAAV;AAEA;;AAvCY;;AA0Cd,eAAeJ,OAAf","sourcesContent":["import * as d3 from 'd3'\n\nconst MARGIN = { TOP: 10, BOTTOM: 80, LEFT: 70, RIGHT: 10 }\nconst WIDTH = 500 - MARGIN.LEFT - MARGIN.RIGHT\nconst HEIGHT = 300 - MARGIN.TOP - MARGIN.BOTTOM\n\nclass D3Chart {\n\tconstructor(element, data) {\n\t\tlet vis = this\n\n    vis.data = data;\n\n\t\tvis.g = d3.select(element)\n\t\t\t.append(\"svg\")\n\t\t\t\t.attr(\"width\", WIDTH + MARGIN.LEFT + MARGIN.RIGHT)\n\t\t\t\t.attr(\"height\", HEIGHT + MARGIN.TOP + MARGIN.BOTTOM)\n\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`)\n\n\n\n    // need to clean up data. Month needs to be a date and values needs to be numbers\n\n\n\t\tvis.data.forEach(d => {\n\t    d.Month = d.Month.toLocaleDateString('en-GB').split('/').reverse().join('');\n\t  })\n\n\t\tconsole.log(vis.data)\n\n\t\t// vis.x = d3.scaleLinear()\n\t\t// \t.domain([0 , d3.max(vis.data, d => Number(d.age))])\n\t\t// \t.range([0, WIDTH])\n    //\n\t \t// vis.y = d3.scaleLinear()\n\t\t// \t.domain([0, d3.max(vis.data, d => Number(d.height))])\n\t\t// \t.range([HEIGHT, 0 ])\n    //\n\t\t// console.log(vis.x(6))\n\t\tvis.update()\n\t}\n\n\tupdate() {\n\t\tlet vis = this\n\n\t}\n}\n\nexport default D3Chart\n"]},"metadata":{},"sourceType":"module"}