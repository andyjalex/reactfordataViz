{"ast":null,"code":"import * as d3 from 'd3';\nconst MARGIN = {\n  TOP: 10,\n  BOTTOM: 80,\n  LEFT: 70,\n  RIGHT: 10\n};\nconst WIDTH = 500 - MARGIN.LEFT - MARGIN.RIGHT;\nconst HEIGHT = 300 - MARGIN.TOP - MARGIN.BOTTOM;\n\nclass D3Chart {\n  constructor(element, data) {\n    let vis = this;\n    vis.data = data;\n    vis.g = d3.select(element).append(\"svg\").attr(\"width\", WIDTH + MARGIN.LEFT + MARGIN.RIGHT).attr(\"height\", HEIGHT + MARGIN.TOP + MARGIN.BOTTOM).append(\"g\").attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`); //need to clean up data.\n\n    vis.data.forEach(d => {\n      d.Year = d.Month.substr(0, 4);\n      d.Month = d.Month.substr(5, 2);\n    });\n    vis.data.forEach(d => {\n      d.NewDate = new Date(d.Year, d.Month, '01');\n    }); // unpivot the data\n\n    var newArray = [];\n    vis.data.forEach(d => {\n      newArray.push({\n        Date: d.NewDate,\n        Breed: 'West',\n        Score: d.West\n      });\n      newArray.push({\n        Date: d.NewDate,\n        Breed: 'Labrador',\n        Score: d.Labrador\n      });\n    });\n    var nested = d3.nest().key(function (d) {\n      return d[lineColumn];\n    }).entries(data);\n    console.log(vis.data); //console.log(newArray)\n    // scales\n\n    vis.x = d3.scaleTime().range([0, WIDTH]);\n    vis.y = d3.scaleLinear().range([HEIGHT, 0]); // axis generators\n\n    const xAxisCall = d3.axisBottom();\n    const yAxisCall = d3.axisLeft().ticks(6).tickFormat(d3.format('.3s')); // axis groups\n\n    const xAxis = vis.g.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", `translate(0, ${HEIGHT})`);\n    const yAxis = vis.g.append(\"g\").attr(\"class\", \"y axis\");\n    vis.update(newArray);\n  }\n\n  update(data) {\n    let vis = this;\n    var lineColumn = 'Breed';\n    console.log(data);\n    vis.x.domain(d3.extent(data, d => d.date));\n    vis.y.domain([0, d3.max(data, d => d.score)]); // generate axes once scales have been set\n\n    xAxis.call(xAxisCall.scale(x));\n    yAxis.call(yAxisCall.scale(y));\n    var nested = d3.nest().key(function (d) {\n      return d[lineColumn];\n    }).entries(data);\n  }\n\n}\n\nexport default D3Chart;","map":{"version":3,"sources":["/Users/andyalexander/Documents/d3/React/reactfordataviz/src/D3Chart.js"],"names":["d3","MARGIN","TOP","BOTTOM","LEFT","RIGHT","WIDTH","HEIGHT","D3Chart","constructor","element","data","vis","g","select","append","attr","forEach","d","Year","Month","substr","NewDate","Date","newArray","push","Breed","Score","West","Labrador","nested","nest","key","lineColumn","entries","console","log","x","scaleTime","range","y","scaleLinear","xAxisCall","axisBottom","yAxisCall","axisLeft","ticks","tickFormat","format","xAxis","yAxis","update","domain","extent","date","max","score","call","scale"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AAEA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,GAAG,EAAE,EAAP;AAAWC,EAAAA,MAAM,EAAE,EAAnB;AAAuBC,EAAAA,IAAI,EAAE,EAA7B;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAAf;AACA,MAAMC,KAAK,GAAG,MAAML,MAAM,CAACG,IAAb,GAAoBH,MAAM,CAACI,KAAzC;AACA,MAAME,MAAM,GAAG,MAAMN,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACE,MAAzC;;AAEA,MAAMK,OAAN,CAAc;AACbC,EAAAA,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgB;AAC1B,QAAIC,GAAG,GAAG,IAAV;AAEEA,IAAAA,GAAG,CAACD,IAAJ,GAAWA,IAAX;AAIFC,IAAAA,GAAG,CAACC,CAAJ,GAAQb,EAAE,CAACc,MAAH,CAAUJ,OAAV,EACNK,MADM,CACC,KADD,EAELC,IAFK,CAEA,OAFA,EAESV,KAAK,GAAGL,MAAM,CAACG,IAAf,GAAsBH,MAAM,CAACI,KAFtC,EAGLW,IAHK,CAGA,QAHA,EAGUT,MAAM,GAAGN,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACE,MAHvC,EAINY,MAJM,CAIC,GAJD,EAKLC,IALK,CAKA,WALA,EAKc,aAAYf,MAAM,CAACG,IAAK,KAAIH,MAAM,CAACC,GAAI,GALrD,CAAR,CAP0B,CAgBxB;;AACFU,IAAAA,GAAG,CAACD,IAAJ,CAASM,OAAT,CAAiBC,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,IAAF,GAASD,CAAC,CAACE,KAAF,CAAQC,MAAR,CAAe,CAAf,EAAiB,CAAjB,CAAT;AACFH,MAAAA,CAAC,CAACE,KAAF,GAAUF,CAAC,CAACE,KAAF,CAAQC,MAAR,CAAe,CAAf,EAAiB,CAAjB,CAAV;AACC,KAHF;AAIAT,IAAAA,GAAG,CAACD,IAAJ,CAASM,OAAT,CAAiBC,CAAC,IAAI;AACrBA,MAAAA,CAAC,CAACI,OAAF,GAAY,IAAIC,IAAJ,CAASL,CAAC,CAACC,IAAX,EAAiBD,CAAC,CAACE,KAAnB,EAA0B,IAA1B,CAAZ;AACA,KAFD,EArB0B,CAyB1B;;AACA,QAAII,QAAQ,GAAG,EAAf;AACAZ,IAAAA,GAAG,CAACD,IAAJ,CAASM,OAAT,CAAiBC,CAAC,IAAI;AACrBM,MAAAA,QAAQ,CAACC,IAAT,CAAc;AAACF,QAAAA,IAAI,EAAEL,CAAC,CAACI,OAAT;AAAkBI,QAAAA,KAAK,EAAE,MAAzB;AAAiCC,QAAAA,KAAK,EAAET,CAAC,CAACU;AAA1C,OAAd;AACAJ,MAAAA,QAAQ,CAACC,IAAT,CAAc;AAACF,QAAAA,IAAI,EAAEL,CAAC,CAACI,OAAT;AAAkBI,QAAAA,KAAK,EAAE,UAAzB;AAAqCC,QAAAA,KAAK,EAAET,CAAC,CAACW;AAA9C,OAAd;AACA,KAHD;AAMA,QAAIC,MAAM,GAAG9B,EAAE,CAAC+B,IAAH,GACXC,GADW,CACP,UAAUd,CAAV,EAAY;AAAE,aAAOA,CAAC,CAACe,UAAD,CAAR;AAAuB,KAD9B,EAEXC,OAFW,CAEHvB,IAFG,CAAb;AAKAwB,IAAAA,OAAO,CAACC,GAAR,CAAYxB,GAAG,CAACD,IAAhB,EAtC0B,CAuC1B;AAEA;;AACAC,IAAAA,GAAG,CAACyB,CAAJ,GAAQrC,EAAE,CAACsC,SAAH,GAAeC,KAAf,CAAqB,CAAC,CAAD,EAAIjC,KAAJ,CAArB,CAAR;AACAM,IAAAA,GAAG,CAAC4B,CAAJ,GAAQxC,EAAE,CAACyC,WAAH,GAAiBF,KAAjB,CAAuB,CAAChC,MAAD,EAAS,CAAT,CAAvB,CAAR,CA3C0B,CA8C1B;;AACA,UAAMmC,SAAS,GAAG1C,EAAE,CAAC2C,UAAH,EAAlB;AACA,UAAMC,SAAS,GAAG5C,EAAE,CAAC6C,QAAH,GAChBC,KADgB,CACV,CADU,EAEhBC,UAFgB,CAEL/C,EAAE,CAACgD,MAAH,CAAU,KAAV,CAFK,CAAlB,CAhD0B,CAoD1B;;AACA,UAAMC,KAAK,GAAGrC,GAAG,CAACC,CAAJ,CAAME,MAAN,CAAa,GAAb,EACZC,IADY,CACP,OADO,EACE,QADF,EAEZA,IAFY,CAEP,WAFO,EAEO,gBAAeT,MAAO,GAF7B,CAAd;AAGA,UAAM2C,KAAK,GAAGtC,GAAG,CAACC,CAAJ,CAAME,MAAN,CAAa,GAAb,EACZC,IADY,CACP,OADO,EACE,QADF,CAAd;AAIAJ,IAAAA,GAAG,CAACuC,MAAJ,CAAW3B,QAAX;AACA;;AAED2B,EAAAA,MAAM,CAACxC,IAAD,EAAO;AACZ,QAAIC,GAAG,GAAG,IAAV;AAEA,QAAIqB,UAAU,GAAE,OAAhB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYzB,IAAZ;AAGAC,IAAAA,GAAG,CAACyB,CAAJ,CAAMe,MAAN,CAAapD,EAAE,CAACqD,MAAH,CAAU1C,IAAV,EAAgBO,CAAC,IAAIA,CAAC,CAACoC,IAAvB,CAAb;AACA1C,IAAAA,GAAG,CAAC4B,CAAJ,CAAMY,MAAN,CAAa,CAAC,CAAD,EAAIpD,EAAE,CAACuD,GAAH,CAAO5C,IAAP,EAAaO,CAAC,IAAIA,CAAC,CAACsC,KAApB,CAAJ,CAAb,EATY,CAWZ;;AACAP,IAAAA,KAAK,CAACQ,IAAN,CAAWf,SAAS,CAACgB,KAAV,CAAgBrB,CAAhB,CAAX;AACAa,IAAAA,KAAK,CAACO,IAAN,CAAWb,SAAS,CAACc,KAAV,CAAgBlB,CAAhB,CAAX;AAGA,QAAIV,MAAM,GAAG9B,EAAE,CAAC+B,IAAH,GACXC,GADW,CACP,UAAUd,CAAV,EAAY;AAAE,aAAOA,CAAC,CAACe,UAAD,CAAR;AAAuB,KAD9B,EAEXC,OAFW,CAEHvB,IAFG,CAAb;AAQA;;AAxFY;;AA2Fd,eAAeH,OAAf","sourcesContent":["import * as d3 from 'd3'\n\nconst MARGIN = { TOP: 10, BOTTOM: 80, LEFT: 70, RIGHT: 10 }\nconst WIDTH = 500 - MARGIN.LEFT - MARGIN.RIGHT\nconst HEIGHT = 300 - MARGIN.TOP - MARGIN.BOTTOM\n\nclass D3Chart {\n\tconstructor(element, data) {\n\t\tlet vis = this\n\n    vis.data = data;\n\n\n\n\t\tvis.g = d3.select(element)\n\t\t\t.append(\"svg\")\n\t\t\t\t.attr(\"width\", WIDTH + MARGIN.LEFT + MARGIN.RIGHT)\n\t\t\t\t.attr(\"height\", HEIGHT + MARGIN.TOP + MARGIN.BOTTOM)\n\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`)\n\n\n\n    //need to clean up data.\n\t\tvis.data.forEach(d => {\n\t    d.Year = d.Month.substr(0,4)\n\t\t\td.Month = d.Month.substr(5,2)\n\t  })\n\t\tvis.data.forEach(d => {\n\t\t\td.NewDate = new Date(d.Year, d.Month, '01')\n\t\t})\n\n\t\t// unpivot the data\n\t\tvar newArray = []\n\t\tvis.data.forEach(d => {\n\t\t\tnewArray.push({Date: d.NewDate, Breed: 'West', Score: d.West,})\n\t\t\tnewArray.push({Date: d.NewDate, Breed: 'Labrador', Score: d.Labrador})\n\t\t})\n\n\n\t\tvar nested = d3.nest()\n\t\t\t.key(function (d){ return d[lineColumn]; })\n\t\t\t.entries(data);\n\n\n\t\tconsole.log(vis.data)\n\t\t//console.log(newArray)\n\n\t\t// scales\n\t\tvis.x = d3.scaleTime().range([0, WIDTH])\n\t\tvis.y = d3.scaleLinear().range([HEIGHT, 0])\n\n\n\t\t// axis generators\n\t\tconst xAxisCall = d3.axisBottom()\n\t\tconst yAxisCall = d3.axisLeft()\n\t\t\t.ticks(6)\n\t\t\t.tickFormat(d3.format('.3s'))\n\n\t\t// axis groups\n\t\tconst xAxis = vis.g.append(\"g\")\n\t\t\t.attr(\"class\", \"x axis\")\n\t\t\t.attr(\"transform\", `translate(0, ${HEIGHT})`)\n\t\tconst yAxis = vis.g.append(\"g\")\n\t\t\t.attr(\"class\", \"y axis\")\n\n\n\t\tvis.update(newArray)\n\t}\n\n\tupdate(data) {\n\t\tlet vis = this\n\n\t\tvar lineColumn ='Breed';\n\n\t\tconsole.log(data)\n\n\n\t\tvis.x.domain(d3.extent(data, d => d.date))\n\t\tvis.y.domain([0, d3.max(data, d => d.score)])\n\n\t\t// generate axes once scales have been set\n\t\txAxis.call(xAxisCall.scale(x))\n\t\tyAxis.call(yAxisCall.scale(y))\n\n\n\t\tvar nested = d3.nest()\n\t\t\t.key(function (d){ return d[lineColumn]; })\n\t\t\t.entries(data);\n\n\n\n\n\n\t}\n}\n\nexport default D3Chart\n"]},"metadata":{},"sourceType":"module"}