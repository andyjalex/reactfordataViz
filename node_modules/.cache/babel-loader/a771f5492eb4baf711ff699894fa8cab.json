{"ast":null,"code":"var _jsxFileName = \"/Users/andyalexander/Documents/d3/React/reactfordataviz/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.wrangleData(this.props.data, this.props.breed);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.wrangleData(nextProps.data, nextProps.breed);\n  }\n\n  wrangleData(data, breed) {\n    //simplify to an array\n    var breedArray = breed.map(obj => {\n      return obj.value;\n    });\n    data.forEach(d => {\n      d.year = d.Month.substr(0, 4);\n      d.month = d.Month.substr(5, 2);\n      d.west = Number(d.West_Highland_White_Terrier);\n      d.retriever = Number(d.Golden_Retriever);\n      d.labrador = Number(d.Labrador_Retriever);\n      d.dalmatian = Number(d.Dalmatian);\n      d.cockapoo = Number(d.Cockapoo); // d.labrador = Number(d.Labrador)\n    });\n    data.forEach(d => {\n      d.NewDate = d.year + d.month + '01';\n    }); // unpivot the data\n\n    var newArray = [];\n    data.forEach(d => {\n      //needs to be refactored to be dynamic\n      //loop for var numOfDogs\n      newArray.push({\n        Date: d.NewDate,\n        Breed: 'West Highland Terrier',\n        Score: d.west\n      });\n      newArray.push({\n        Date: d.NewDate,\n        Breed: 'Retriever',\n        Score: d.retriever\n      });\n      newArray.push({\n        Date: d.NewDate,\n        Breed: 'Labrador',\n        Score: d.labrador\n      });\n      newArray.push({\n        Date: d.NewDate,\n        Breed: 'Dalmatian',\n        Score: d.dalmatian\n      });\n      newArray.push({\n        Date: d.NewDate,\n        Breed: 'Cockapoo',\n        Score: d.cockapoo\n      });\n    });\n    const newData = newArray.filter(item => breedArray.includes(item.Breed));\n    newData.forEach(d => {\n      if (d.Score !== d.Score) {\n        d.Score = 0;\n      }\n    });\n    var table = this.coll2tbl(newData, 'Date', 'Breed', 'Score');\n    console.log(table);\n    this.setState({\n      data: table\n    });\n  }\n\n  get_prop(obj, prop) {\n    return prop.split('.').reduce((o, k) => obj[k], obj);\n  }\n\n  coll2tbl(coll, row_header, col_header, cell) {\n    var table = {};\n    var row_headers = [];\n    var cols = {};\n    coll.forEach(a => {\n      var h = this.get_prop(a, row_header);\n\n      if (h in table === false) {\n        table[h] = {};\n        row_headers.push(h);\n      }\n\n      var c = this.get_prop(a, col_header);\n      cols[c] = null;\n      table[h][c] = this.get_prop(a, cell);\n    });\n    var cells = [];\n\n    for (var row in table) cells.push(Object.values(table[row]));\n\n    return {\n      row_headers,\n      col_headers: Object.keys(cols),\n      cells\n    };\n  }\n\n  renderCols() {\n    return this.state.data.col_headers.map(function (item, i) {\n      return /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        xs: 3,\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  renderRows() {\n    var cells = this.state.data.cells;\n    const background = \"grey\";\n    return this.state.data.row_headers.map(function (item, i) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            marginTop: \"2px\",\n            backgroundColor: '#ccc'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            xs: 3,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), cells[0].map(function (cell, j) {\n            return /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              xs: 3,\n              children: cell\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this);\n          })]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    if (this.state.data == 0) {\n      return \"No data yet\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          xs: 3,\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), this.renderCols()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), this.renderRows()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/andyalexander/Documents/d3/React/reactfordataviz/src/components/Table.js"],"names":["React","Component","Row","Col","Form","Table","constructor","props","state","data","componentDidMount","wrangleData","breed","UNSAFE_componentWillReceiveProps","nextProps","breedArray","map","obj","value","forEach","d","year","Month","substr","month","west","Number","West_Highland_White_Terrier","retriever","Golden_Retriever","labrador","Labrador_Retriever","dalmatian","Dalmatian","cockapoo","Cockapoo","NewDate","newArray","push","Date","Breed","Score","newData","filter","item","includes","table","coll2tbl","console","log","setState","get_prop","prop","split","reduce","o","k","coll","row_header","col_header","cell","row_headers","cols","a","h","c","cells","row","Object","values","col_headers","keys","renderCols","i","renderRows","background","marginTop","backgroundColor","j","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\n\nexport default class Table extends Component {\n\n  state = {\n    data: []\n  }\n\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n\n    this.wrangleData(this.props.data, this.props.breed)\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    this.wrangleData(nextProps.data, nextProps.breed)\n  }\n\n  wrangleData(data, breed) {\n\n    //simplify to an array\n    var breedArray = breed.map((obj) => {\n      return obj.value\n    })\n\n    data.forEach(d => {\n\t    d.year = d.Month.substr(0,4)\n\t\t\td.month = d.Month.substr(5,2)\n\t\t\td.west = Number(d.West_Highland_White_Terrier)\n\t\t\td.retriever = Number(d.Golden_Retriever)\n\t\t\td.labrador = Number(d.Labrador_Retriever)\n\t\t\td.dalmatian = Number(d.Dalmatian)\n\t\t\td.cockapoo = Number(d.Cockapoo)\n\t\t\t// d.labrador = Number(d.Labrador)\n\t  })\n\t\tdata.forEach(d => {\n\t\t\td.NewDate = d.year+d.month+'01'\n    })\n\n\t\t// unpivot the data\n\t\tvar newArray = []\n\t\tdata.forEach(d => {\n\t\t\t//needs to be refactored to be dynamic\n\t\t\t//loop for var numOfDogs\n\t\t\tnewArray.push({Date: d.NewDate, Breed: 'West Highland Terrier', Score: d.west})\n\t\t\tnewArray.push({Date: d.NewDate, Breed: 'Retriever', Score: d.retriever})\n\t\t\tnewArray.push({Date: d.NewDate, Breed: 'Labrador', Score: d.labrador})\n\t\t\tnewArray.push({Date: d.NewDate, Breed: 'Dalmatian', Score: d.dalmatian})\n\t\t\tnewArray.push({Date: d.NewDate, Breed: 'Cockapoo', Score: d.cockapoo})\n\t\t})\n\n\t\tconst newData = newArray.filter(item => breedArray.includes(item.Breed))\n\n\t\tnewData.forEach(d => {\n\t\t\tif(d.Score !== d.Score){\n    \t\td.Score = 0;\n\t\t\t}\n\t\t});\n\n    var table = this.coll2tbl(newData, 'Date', 'Breed', 'Score');\n    console.log(table);\n\n    this.setState({data: table })\n\n  }\n\n  get_prop(obj, prop) {\n      return prop.split('.').reduce((o,k) => obj[k], obj);\n  }\n\n\n  coll2tbl(coll, row_header, col_header, cell) {\n    var table = {};\n    var row_headers = [];\n    var cols = {};\n\n    coll.forEach(a => {\n        var h = this.get_prop(a, row_header);\n        if (h in table === false) {\n            table[h] = {};\n            row_headers.push(h);\n        }\n        var c = this.get_prop(a, col_header);\n        cols[c] = null;\n        table[h][c] = this.get_prop(a, cell);\n    });\n\n    var cells = [];\n    for (var row in table)\n        cells.push(Object.values(table[row]));\n\n    return { row_headers, col_headers: Object.keys(cols), cells };\n}\n\n  renderCols() {\n    return (\n    this.state.data.col_headers.map(function (item, i) {\n      return(\n        <Col md={2} xs={3}>{item}</Col>\n      )\n    })\n    )\n  }\n\n  renderRows() {\n   var cells = this.state.data.cells\n   const background = \"grey\"\n    return (\n      this.state.data.row_headers.map(function (item, i) {\n        return(\n        <div>\n        <Row\n          key={i}\n            style={{marginTop: \"2px\", backgroundColor: '#ccc' }}\n          >\n          <Col md={2} xs={3}>{item}</Col>\n          {cells[0].map(function (cell, j)\n          {\n            return(\n            <Col\n              md={2} xs={3}\n              key ={j}>\n                {cell}\n            </Col>\n            )\n          })}\n          </Row>\n          </div>\n\n        )}\n      )\n    )\n  }\n\n  render() {\n\n    if (this.state.data == 0) {\n      return \"No data yet\"\n    }\n\n    return(\n      <div class=\"container-fluid\" >\n        <Row>\n          <Col md={2} xs={3}>Month</Col>\n          {this.renderCols()}\n        </Row>\n        {this.renderRows()}\n\n      </div>\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}