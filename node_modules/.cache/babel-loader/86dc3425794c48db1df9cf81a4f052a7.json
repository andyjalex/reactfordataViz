{"ast":null,"code":"import * as d3 from 'd3';\nconst MARGIN = {\n  TOP: 10,\n  BOTTOM: 80,\n  LEFT: 70,\n  RIGHT: 10\n};\nconst WIDTH = 500 - MARGIN.LEFT - MARGIN.RIGHT;\nconst HEIGHT = 300 - MARGIN.TOP - MARGIN.BOTTOM;\n\nclass D3Chart {\n  constructor(element, data) {\n    let vis = this;\n    vis.data = data;\n    var xColumn = \"Date\";\n    var yColumn = \"Score\";\n    vis.g = d3.select(element).append(\"svg\").attr(\"width\", WIDTH + MARGIN.LEFT + MARGIN.RIGHT).attr(\"height\", HEIGHT + MARGIN.TOP + MARGIN.BOTTOM).append(\"g\").attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`); //\n    // //need to clean up data.\n    // vis.data.forEach(d => {\n    //   d.Year = d.Month.substr(0,4)\n    // \td.Month = d.Month.substr(5,2)\n    // \td.West = Number(d.West)\n    // \td.Labrador = Number(d.Labrador)\n    // })\n    // vis.data.forEach(d => {\n    // \td.NewDate = new Date(d.Year, d.Month, '01')\n    // })\n    //\n    // // unpivot the data\n    // var newArray = []\n    // vis.data.forEach(d => {\n    // \tnewArray.push({Date: d.NewDate, Breed: 'West', Score: d.West,})\n    // \tnewArray.push({Date: d.NewDate, Breed: 'Labrador', Score: d.Labrador})\n    // })\n\n    console.log(vis.data); // scales\n\n    vis.x = d3.scaleTime().range([0, WIDTH]);\n    vis.y = d3.scaleLinear().range([HEIGHT, 0]); // axis generators\n\n    vis.xAxisCall = d3.axisBottom();\n    vis.yAxisCall = d3.axisLeft().ticks(6).tickFormat(d3.format('.3s')); // axis groups\n\n    vis.xAxis = vis.g.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", `translate(0, ${HEIGHT})`);\n    vis.yAxis = vis.g.append(\"g\").attr(\"class\", \"y axis\");\n    vis.update(vis.data);\n  }\n\n  update(data) {\n    let vis = this;\n    var lineColumn = 'country';\n    var xColumn = \"year\";\n    var yColumn = \"population\";\n    var line = d3.line().x(function (d) {\n      return vis.x(d[xColumn]);\n    }).y(function (d) {\n      return vis.y(d[yColumn]);\n    });\n    vis.x.domain(d3.extent(data, function (d) {\n      return d[xColumn];\n    }));\n    vis.y.domain([0, d3.max(data, function (d) {\n      return d[yColumn];\n    })]); // generate axes once scales have been set\n\n    vis.xAxis.call(vis.xAxisCall.scale(vis.x));\n    vis.yAxis.call(vis.yAxisCall.scale(vis.y));\n    console.log(data);\n    var nested = Array.from(d3.group(data, d => d[lineColumn]));\n    console.log(nested);\n    var paths = vis.g.selectAll(\".chart-line\").data(nested[0]);\n    paths.enter().append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", '#000').attr(\"stroke-width\", 1.5).attr(\"d\", function (d) {\n      return d3.line().x(function (d) {\n        return vis.x(d.year);\n      }).y(function (d) {\n        return vis.y(d.population);\n      })(d.values);\n    }); //paths.enter().append(\"path\").attr(\"class\", \"chart-line\")\n    //paths.exit().remove();\n    //paths.attr(\"d\", function (d){  console.log('blaaaaa'); return line();});\n  }\n\n}\n\nexport default D3Chart;","map":{"version":3,"sources":["/Users/andyalexander/Documents/d3/React/reactfordataviz/src/D3Chart.js"],"names":["d3","MARGIN","TOP","BOTTOM","LEFT","RIGHT","WIDTH","HEIGHT","D3Chart","constructor","element","data","vis","xColumn","yColumn","g","select","append","attr","console","log","x","scaleTime","range","y","scaleLinear","xAxisCall","axisBottom","yAxisCall","axisLeft","ticks","tickFormat","format","xAxis","yAxis","update","lineColumn","line","d","domain","extent","max","call","scale","nested","Array","from","group","paths","selectAll","enter","year","population","values"],"mappings":"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","sourcesContent":["import * as d3 from 'd3'\n\n\nconst MARGIN = { TOP: 10, BOTTOM: 80, LEFT: 70, RIGHT: 10 }\nconst WIDTH = 500 - MARGIN.LEFT - MARGIN.RIGHT\nconst HEIGHT = 300 - MARGIN.TOP - MARGIN.BOTTOM\n\nclass D3Chart {\n\tconstructor(element, data) {\n\t\tlet vis = this\n\n    vis.data = data;\n\n\t\tvar xColumn = \"Date\"\n\t\tvar yColumn = \"Score\"\n\n\n\n\t\tvis.g = d3.select(element)\n\t\t\t.append(\"svg\")\n\t\t\t\t.attr(\"width\", WIDTH + MARGIN.LEFT + MARGIN.RIGHT)\n\t\t\t\t.attr(\"height\", HEIGHT + MARGIN.TOP + MARGIN.BOTTOM)\n\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`)\n\n\n\t\t//\n    // //need to clean up data.\n\t\t// vis.data.forEach(d => {\n\t  //   d.Year = d.Month.substr(0,4)\n\t\t// \td.Month = d.Month.substr(5,2)\n\t\t// \td.West = Number(d.West)\n\t\t// \td.Labrador = Number(d.Labrador)\n\t  // })\n\t\t// vis.data.forEach(d => {\n\t\t// \td.NewDate = new Date(d.Year, d.Month, '01')\n\t\t// })\n\t\t//\n\t\t// // unpivot the data\n\t\t// var newArray = []\n\t\t// vis.data.forEach(d => {\n\t\t// \tnewArray.push({Date: d.NewDate, Breed: 'West', Score: d.West,})\n\t\t// \tnewArray.push({Date: d.NewDate, Breed: 'Labrador', Score: d.Labrador})\n\t\t// })\n\n\n\t\tconsole.log(vis.data)\n\n\t\t// scales\n\t\tvis.x = d3.scaleTime().range([0, WIDTH]);\n\t\tvis.y = d3.scaleLinear().range([HEIGHT, 0]);\n\n\n\t\t// axis generators\n\t\tvis.xAxisCall = d3.axisBottom()\n\t\tvis.yAxisCall = d3.axisLeft()\n\t\t\t.ticks(6)\n\t\t\t.tickFormat(d3.format('.3s'))\n\n\t\t// axis groups\n\t\tvis.xAxis = vis.g.append(\"g\")\n\t\t\t.attr(\"class\", \"x axis\")\n\t\t\t.attr(\"transform\", `translate(0, ${HEIGHT})`)\n\t\tvis.yAxis = vis.g.append(\"g\")\n\t\t\t.attr(\"class\", \"y axis\")\n\n\n\t\tvis.update(vis.data)\n\t}\n\n\tupdate(data) {\n\t\tlet vis = this\n\n\t\tvar lineColumn ='country';\n\t\tvar xColumn = \"year\";\n\t\tvar yColumn = \"population\";\n\n\t\tvar line = d3.line()\n        .x(function(d) { return vis.x(d[xColumn]); })\n        .y(function(d) { return vis.y(d[yColumn]); });\n\n\t\tvis.x.domain(d3.extent(data, function (d){ return d[xColumn]; }));\n    vis.y.domain([0, d3.max(data, function (d){ return d[yColumn]; })]);\n\n\t\t// generate axes once scales have been set\n\t\tvis.xAxis.call(vis.xAxisCall.scale(vis.x))\n\t\tvis.yAxis.call(vis.yAxisCall.scale(vis.y))\n\n\t\tconsole.log(data)\n\t\tvar nested = Array.from(d3.group(data, d => d[lineColumn]));\n\n\t\tconsole.log(nested)\n\n\t\tvar paths = vis.g.selectAll(\".chart-line\").data(nested[0]);\n\t\tpaths.enter().append(\"path\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", '#000')\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", function(d){\n          return d3.line()\n            .x(function(d) { return vis.x(d.year); })\n            .y(function(d) { return vis.y(d.population); })\n            (d.values)\n        })\n\t\t//paths.enter().append(\"path\").attr(\"class\", \"chart-line\")\n\t\t//paths.exit().remove();\n\t\t//paths.attr(\"d\", function (d){  console.log('blaaaaa'); return line();});\n\n\n\t}\n}\n\nexport default D3Chart\n"]},"metadata":{},"sourceType":"module"}