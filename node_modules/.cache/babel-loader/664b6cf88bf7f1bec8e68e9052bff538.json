{"ast":null,"code":"var _jsxFileName = \"/Users/andyalexander/Documents/d3/React/reactfordataviz/src/components/ChartWrapper.js\";\nimport React, { Component } from 'react';\nimport D3Chart from './D3Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ChartWrapper extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      width: 200,\n      height: 200\n    };\n    this.measure = this.measure.bind(this);\n  }\n\n  componentDidMount() {\n    //console.log(this.props.data)\n    console.log(this.refs.chart.width);\n    this.setState({\n      chart: new D3Chart(this.refs.chart, this.props.data, this.props.breed)\n    });\n  }\n\n  measure() {\n    let rect = this.container.getBoundingClientRect();\n\n    if (this.state.width !== rect.width || this.state.height !== rect.height) {\n      this.setState({\n        width: rect.width,\n        height: rect.height\n      });\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.state.chart.update(nextProps.data, nextProps.breed);\n  }\n\n  render() {\n    //console.log(this.ref.chart)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-area\",\n      ref: \"chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/andyalexander/Documents/d3/React/reactfordataviz/src/components/ChartWrapper.js"],"names":["React","Component","D3Chart","ChartWrapper","constructor","props","context","state","width","height","measure","bind","componentDidMount","console","log","refs","chart","setState","data","breed","rect","container","getBoundingClientRect","shouldComponentUpdate","UNSAFE_componentWillReceiveProps","nextProps","update","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAElDG,EAAAA,WAAW,CAAEC,KAAF,EAASC,OAAT,EAAkB;AAC3B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,MAAM,EAAE;AAFF,KAAb;AAIA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,IAAL,CAAUC,KAAV,CAAgBR,KAA5B;AACA,SAAKS,QAAL,CAAc;AACZD,MAAAA,KAAK,EAAE,IAAId,OAAJ,CAAY,KAAKa,IAAL,CAAUC,KAAtB,EAA6B,KAAKX,KAAL,CAAWa,IAAxC,EAA8C,KAAKb,KAAL,CAAWc,KAAzD;AADK,KAAd;AAKD;;AAEDT,EAAAA,OAAO,GAAI;AACT,QAAIU,IAAI,GAAG,KAAKC,SAAL,CAAeC,qBAAf,EAAX;;AACA,QAAG,KAAKf,KAAL,CAAWC,KAAX,KAAqBY,IAAI,CAACZ,KAA1B,IAAmC,KAAKD,KAAL,CAAWE,MAAX,KAAsBW,IAAI,CAACX,MAAjE,EAAwE;AACrE,WAAKQ,QAAL,CAAc;AACPT,QAAAA,KAAK,EAAEY,IAAI,CAACZ,KADL;AAEPC,QAAAA,MAAM,EAAEW,IAAI,CAACX;AAFN,OAAd;AAIF;AACF;;AAEDc,EAAAA,qBAAqB,GAAI;AACvB,WAAO,KAAP;AACD;;AAEDC,EAAAA,gCAAgC,CAAEC,SAAF,EAAa;AAC3C,SAAKlB,KAAL,CAAWS,KAAX,CAAiBU,MAAjB,CAAwBD,SAAS,CAACP,IAAlC,EAAwCO,SAAS,CAACN,KAAlD;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP;AACA,wBAAO;AAAK,MAAA,SAAS,EAAE,YAAhB;AAA6B,MAAA,GAAG,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA1CiD","sourcesContent":["import React, { Component } from 'react';\nimport D3Chart from './D3Chart'\n\nexport default class ChartWrapper extends Component {\n\n  constructor (props, context) {\n    super(props, context);\n    this.state = {\n           width: 200,\n           height: 200\n        };\n    this.measure = this.measure.bind(this);\n  }\n\n  componentDidMount() {\n    //console.log(this.props.data)\n    console.log(this.refs.chart.width)\n    this.setState({\n      chart: new D3Chart(this.refs.chart, this.props.data, this.props.breed)\n    })\n\n\n  }\n\n  measure () {\n    let rect = this.container.getBoundingClientRect();\n    if(this.state.width !== rect.width || this.state.height !== rect.height){\n       this.setState({\n              width: rect.width,\n              height: rect.height\n           });\n    }\n  }\n\n  shouldComponentUpdate () {\n    return false\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    this.state.chart.update(nextProps.data, nextProps.breed)\n  }\n\n  render() {\n    //console.log(this.ref.chart)\n    return <div className =\"chart-area\" ref=\"chart\"></div>\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}