{"ast":null,"code":"var _jsxFileName = \"/Users/andyalexander/Documents/d3/React/reactfordataviz/src/App.js\";\nimport React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { csv } from 'd3';\nimport data from './data/multiTimeline.csv';\nimport ChartWrapper from './components/ChartWrapper';\nimport Dropdown from './components/Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  label: 'Afrikaans',\n  value: 'af'\n}, {\n  label: 'Arabic',\n  value: 'ar'\n}, {\n  label: 'Hindi',\n  value: 'hi'\n}];\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      language: options[0]\n    };\n\n    this.setLanguage = language => this.setState({\n      language\n    });\n  }\n\n  componentDidMount() {\n    csv(data).then(data => this.setState({\n      data\n    })).catch(error => console.log(error));\n  }\n\n  renderChart() {\n    if (this.state.data.length == 0) {\n      return \"No data yet\";\n    }\n\n    console.log(this.state.data);\n    return /*#__PURE__*/_jsxDEV(ChartWrapper, {\n      data: this.state.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    //const [language, setLanguage] = useState(options[0]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"light\",\n        children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          children: \"ReactforDataViz.NET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              label: \"Select a Language\",\n              selected: this.state.language,\n              onSelectedChange: this.setLanguage,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            xs: 12,\n            children: this.renderChart()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andyalexander/Documents/d3/React/reactfordataviz/src/App.js"],"names":["React","Component","Navbar","Container","Row","Col","csv","data","ChartWrapper","Dropdown","options","label","value","App","state","language","setLanguage","setState","componentDidMount","then","catch","error","console","log","renderChart","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,GAAT,QAAoB,IAApB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACED,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALc,EASd;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATc,CAAhB;;AAeA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAEzBa,KAFyB,GAEjB;AACNP,MAAAA,IAAI,EAAE,EADA;AAENQ,MAAAA,QAAQ,EAAEL,OAAO,CAAC,CAAD;AAFX,KAFiB;;AAAA,SAQzBM,WARyB,GAQVD,QAAD,IAAc,KAAKE,QAAL,CAAc;AAAEF,MAAAA;AAAF,KAAd,CARH;AAAA;;AAUzBG,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,GAAG,CAACC,IAAD,CAAH,CACGY,IADH,CACQZ,IAAI,IAAI,KAAKU,QAAL,CAAc;AAAEV,MAAAA;AAAF,KAAd,CADhB,EAEGa,KAFH,CAESC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFlB;AAGD;;AACDG,EAAAA,WAAW,GAAG;AACZ,QAAI,KAAKV,KAAL,CAAWP,IAAX,CAAgBkB,MAAhB,IAA0B,CAA9B,EAAiC;AAC/B,aAAO,aAAP;AACD;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWP,IAAvB;AACA,wBAAO,QAAC,YAAD;AAAc,MAAA,IAAI,EAAE,KAAKO,KAAL,CAAWP;AAA/B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDmB,EAAAA,MAAM,GAAG;AACP;AAIA,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAA,+BACE,QAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD;AAAA,gCACE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAA,mCACA,QAAC,QAAD;AACE,cAAA,KAAK,EAAC,mBADR;AAEE,cAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWC,QAFvB;AAGE,cAAA,gBAAgB,EAAE,KAAKC,WAHzB;AAIE,cAAA,OAAO,EAAEN;AAJX;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAa,YAAA,EAAE,EAAE,EAAjB;AAAA,sBAAsB,KAAKc,WAAL;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAlDwB;;AAqD3B,eAAeX,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { csv } from 'd3';\nimport data from './data/multiTimeline.csv';\nimport ChartWrapper from './components/ChartWrapper';\nimport Dropdown from './components/Dropdown';\n\nconst options = [\n  {\n    label: 'Afrikaans',\n    value: 'af',\n  },\n  {\n    label: 'Arabic',\n    value: 'ar',\n  },\n  {\n    label: 'Hindi',\n    value: 'hi',\n  },\n];\n\nclass App extends Component{\n\n  state = {\n    data: [],\n    language: options[0]\n  }\n\n\n  setLanguage = (language) => this.setState({ language })\n\n  componentDidMount() {\n    csv(data)\n      .then(data => this.setState({ data }))\n      .catch(error => console.log(error));\n  }\n  renderChart() {\n    if (this.state.data.length == 0) {\n      return \"No data yet\"\n    }\n    console.log(this.state.data)\n    return <ChartWrapper data={this.state.data} />\n  }\n\n  render() {\n    //const [language, setLanguage] = useState(options[0]);\n\n\n\n    return (\n      <div>\n        <Navbar bg=\"light\">\n          <Navbar.Brand>ReactforDataViz.NET</Navbar.Brand>\n        </Navbar>\n        <Container>\n          <Row>\n            <Col xs={12}>\n            <Dropdown\n              label=\"Select a Language\"\n              selected={this.state.language}\n              onSelectedChange={this.setLanguage}\n              options={options}\n            />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12} xs={12}>{this.renderChart()}</Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}