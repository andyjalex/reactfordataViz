{"ast":null,"code":"import * as d3 from 'd3';\nconst MARGIN = {\n  TOP: 10,\n  BOTTOM: 80,\n  LEFT: 70,\n  RIGHT: 10\n};\nconst WIDTH = 600 - MARGIN.LEFT - MARGIN.RIGHT;\nconst HEIGHT = 300 - MARGIN.TOP - MARGIN.BOTTOM;\n\nclass D3Chart {\n  constructor(element, data) {\n    let vis = this;\n    vis.data = data;\n    var xColumn = \"Date\";\n    var yColumn = \"Score\";\n    vis.g = d3.select(element).append(\"svg\").attr(\"width\", WIDTH + MARGIN.LEFT + MARGIN.RIGHT).attr(\"height\", HEIGHT + MARGIN.TOP + MARGIN.BOTTOM).append(\"g\").attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`); //need to clean up data.\n\n    vis.data.forEach(d => {\n      d.year = d.Month.substr(0, 4);\n      d.month = d.Month.substr(5, 2); //d.west = Number(d.West_Highland_White_Terrier)\n      //d.retriever = Number(d.Golden_Retriever)\n      //d.labrador = Number(d.Labrador_Retriever)\n\n      d.west = Number(d.West);\n      d.labrador = Number(d.Labrador);\n    });\n    vis.data.forEach(d => {\n      d.NewDate = new Date(d.year, d.month, '01');\n    });\n    console.log(vis.data); // unpivot the data\n\n    var newArray = [];\n    vis.data.forEach(d => {\n      newArray.push({\n        Date: d.NewDate,\n        Breed: 'West',\n        Score: d.west\n      }); //newArray.push({Date: d.NewDate, Breed: 'Retriever', Score: d.retriever})\n\n      newArray.push({\n        Date: d.NewDate,\n        Breed: 'Labrador',\n        Score: d.labrador\n      });\n    });\n    console.log(vis.data);\n    console.log(newArray); // axis groups\n\n    vis.xAxis = vis.g.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", `translate(0, ${HEIGHT})`);\n    vis.yAxis = vis.g.append(\"g\").attr(\"class\", \"y axis\"); // Path generator\n\n    vis.update(newArray);\n  }\n\n  update(data) {\n    let vis = this;\n    var lineColumn = 'Breed';\n    var xColumn = \"Date\";\n    var yColumn = \"Score\"; // scales\n\n    const x = d3.scaleTime().domain(d3.extent(data, d => d.Date)).range([0, WIDTH]);\n    const y = d3.scaleLinear().domain([0, d3.max(data, d => d.Score)]).range([HEIGHT, 0]); // generate axes once scales have been set\n\n    vis.xAxisCall = d3.axisBottom();\n    vis.xAxis.call(vis.xAxisCall.scale(x));\n    vis.yAxisCall = d3.axisLeft().ticks(6).tickFormat(d3.format('.3s'));\n    vis.yAxis.call(vis.yAxisCall.scale(y)); //console.log(data)\n    //var nested = Array.from(d3.group(data, d => d[lineColumn]),([key, value]) => ({key, value}));\n    //var nested = d3.group(data, d => d[lineColumn])\n\n    var nested = Array.from(d3.group(data, d => d[lineColumn]), _ref => {\n      let [key, value] = _ref;\n      return {\n        key,\n        value\n      };\n    });\n    console.log(nested); // set the colour scale\n\n    var color = d3.scaleOrdinal(d3.schemeCategory10);\n    const line = d3.line().x(function (d) {\n      return x(d[xColumn]);\n    }).y(function (d) {\n      return y(d[yColumn]);\n    });\n    nested.forEach(function (d, i) {\n      vis.g.append(\"path\").attr(\"class\", \"chart-line\").style(\"stroke\", function () {\n        // Add the colours dynamically\n        return d.color = color(d.key);\n      }).attr(\"d\", line(d.value));\n    });\n  }\n\n}\n\nexport default D3Chart;","map":{"version":3,"sources":["/Users/andyalexander/Documents/d3/React/reactfordataviz/src/D3Chart.js"],"names":["d3","MARGIN","TOP","BOTTOM","LEFT","RIGHT","WIDTH","HEIGHT","D3Chart","constructor","element","data","vis","xColumn","yColumn","g","select","append","attr","forEach","d","year","Month","substr","month","west","Number","West","labrador","Labrador","NewDate","Date","console","log","newArray","push","Breed","Score","xAxis","yAxis","update","lineColumn","x","scaleTime","domain","extent","range","y","scaleLinear","max","xAxisCall","axisBottom","call","scale","yAxisCall","axisLeft","ticks","tickFormat","format","nested","Array","from","group","key","value","color","scaleOrdinal","schemeCategory10","line","i","style"],"mappings":"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","sourcesContent":["import * as d3 from 'd3'\n\n\nconst MARGIN = { TOP: 10, BOTTOM: 80, LEFT: 70, RIGHT: 10 }\nconst WIDTH = 600 - MARGIN.LEFT - MARGIN.RIGHT\nconst HEIGHT = 300 - MARGIN.TOP - MARGIN.BOTTOM\n\nclass D3Chart {\n\tconstructor(element, data) {\n\t\tlet vis = this\n\n    vis.data = data;\n\t\tvar xColumn = \"Date\"\n\t\tvar yColumn = \"Score\"\n\n\n\n\t\tvis.g = d3.select(element)\n\t\t\t.append(\"svg\")\n\t\t\t\t.attr(\"width\", WIDTH + MARGIN.LEFT + MARGIN.RIGHT)\n\t\t\t\t.attr(\"height\", HEIGHT + MARGIN.TOP + MARGIN.BOTTOM)\n\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`)\n\n\n\n    //need to clean up data.\n\t\tvis.data.forEach(d => {\n\t    d.year = d.Month.substr(0,4)\n\t\t\td.month = d.Month.substr(5,2)\n\t\t\t//d.west = Number(d.West_Highland_White_Terrier)\n\t\t\t//d.retriever = Number(d.Golden_Retriever)\n\t\t\t//d.labrador = Number(d.Labrador_Retriever)\n\t\t\td.west = Number(d.West)\n\t\t\td.labrador = Number(d.Labrador)\n\t  })\n\t\tvis.data.forEach(d => {\n\t\t\td.NewDate = new Date(d.year, d.month, '01')\n\t\t})\n\t\tconsole.log(vis.data)\n\n\t\t// unpivot the data\n\t\tvar newArray = []\n\t\tvis.data.forEach(d => {\n\t\t\tnewArray.push({Date: d.NewDate, Breed: 'West', Score: d.west})\n\t\t\t//newArray.push({Date: d.NewDate, Breed: 'Retriever', Score: d.retriever})\n\t\t\tnewArray.push({Date: d.NewDate, Breed: 'Labrador', Score: d.labrador})\n\t\t})\n\n\n\t\tconsole.log(vis.data)\n\t\tconsole.log(newArray)\n\n\n\n\n\n\t\t// axis groups\n\t\tvis.xAxis = vis.g.append(\"g\")\n\t\t\t.attr(\"class\", \"x axis\")\n\t\t\t.attr(\"transform\", `translate(0, ${HEIGHT})`)\n\t\tvis.yAxis = vis.g.append(\"g\")\n\t\t\t.attr(\"class\", \"y axis\")\n\n\t\t// Path generator\n\n\t\tvis.update(newArray)\n\t}\n\n\tupdate(data) {\n\t\tlet vis = this\n\n\t\tvar lineColumn ='Breed';\n\t\tvar xColumn = \"Date\";\n\t\tvar yColumn = \"Score\";\n\n\t\t// scales\n\t\tconst x = d3.scaleTime()\n\t\t\t.domain(d3.extent(data, d => d.Date))\n\t\t\t.range([0, WIDTH])\n\n\t\tconst y = d3.scaleLinear()\n\t\t\t.domain([0, d3.max(data, d => d.Score)])\n\t\t\t.range([HEIGHT, 0])\n\n\n\t\t// generate axes once scales have been set\n\t\tvis.xAxisCall = d3.axisBottom()\n\t\tvis.xAxis.call(vis.xAxisCall.scale(x))\n\n\t\tvis.yAxisCall = d3.axisLeft()\n\t\t\t.ticks(6)\n\t\t\t.tickFormat(d3.format('.3s'))\n\t\tvis.yAxis.call(vis.yAxisCall.scale(y))\n\n\t\t//console.log(data)\n\t\t//var nested = Array.from(d3.group(data, d => d[lineColumn]),([key, value]) => ({key, value}));\n\t\t//var nested = d3.group(data, d => d[lineColumn])\n\n\t\tvar nested = Array.from(\n\t\t d3.group(data, d => d[lineColumn]), ([key, value]) => ({key, value})\n\t );\n\t\tconsole.log(nested)\n\n\t\t// set the colour scale\n    var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n\n\t\tconst line = d3.line()\n    .x(function(d) { return x(d[xColumn]); })\n    .y(function(d) { return y(d[yColumn]); });\n\n\t\tnested.forEach(function(d,i) {\n\t\t\tvis.g.append(\"path\")\n\t\t\t.attr(\"class\", \"chart-line\")\n\t\t\t.style(\"stroke\", function() { // Add the colours dynamically\n\t\t\t\treturn d.color = color(d.key);\n\t\t\t})\n\t\t\t.attr(\"d\", line(d.value));\n\n\t\t})\n\n\n\t}\n}\n\nexport default D3Chart\n"]},"metadata":{},"sourceType":"module"}